generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model chat {
  chatId             String    @id @unique @map("chat_id")
  geminiSentiment   String?   @map("gemini_sentiment")
  createdAt         DateTime  @default(now()) @db.Timestamptz(6) @map("created_at")
  updatedAt         DateTime? @db.Timestamp(6) @map("updated_at")
  geminiExplanation String?   @map("gemini_explanation")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model chatMessage {
  id             Int    @id @default(autoincrement())
  createdAt     DateTime  @default(now()) @db.Timestamptz(6) @map("created_at")
  senderId      Int    @map("sender_id")    
  receiverId    Int    @map("receiver_id")
  message        String?
  sentTimestamp DateTime? @db.Timestamptz(6) @map("sent_timestamp")
  chatId        String? @map("chat_id")

  @@map("chat_message")
}

model gig {
  gigId            Int    @id @default(autoincrement()) @map("gig_id")
  clientId         Int   @map("client_id")
  freelancerId     Int?  @map("freelancer_id")
  description      String?
  gigValue         Float?   @map("gig_value")
  startDate        DateTime? @db.Timestamp(6) @map("start_date")
  endDate          DateTime? @db.Timestamp(6) @map("end_date")
  createdAt        DateTime  @default(now()) @db.Timestamptz(6) @map("created_at")
  completionStatus String?   @map("completion_status")
}

model user {
  address        String    @unique @db.VarChar
  username       String?  
  role           String?
  xFollowers    Int?   @map("x_followers")
  githubCommits Int?   @map("github_commits")
  createdAt      DateTime  @default(now()) @db.Timestamp(6) @map("created_at")
  userId         Int    @id @default(autoincrement()) @map("user_id")
  lastLogin     DateTime? @db.Timestamp(6) @map("last_login")
}
